(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{480:function(e,a,t){"use strict";t.r(a);var r=t(28),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"webpack基本配置介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack基本配置介绍"}},[e._v("#")]),e._v(" webpack基本配置介绍")]),e._v(" "),t("h2",{attrs:{id:"_6大核心概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6大核心概念"}},[e._v("#")]),e._v(" 6大核心概念")]),e._v(" "),t("h3",{attrs:{id:"_1-entry-入口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-entry-入口"}},[e._v("#")]),e._v(" 1. entry 入口")]),e._v(" "),t("blockquote",[t("p",[e._v("Webpack 行构建的第一步将 Entry 开始，可抽象成输入。")])]),e._v(" "),t("h3",{attrs:{id:"_2-output-输出结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-output-输出结果"}},[e._v("#")]),e._v(" 2. output 输出结果")]),e._v(" "),t("blockquote",[t("p",[e._v("在 Webpack 经过 系列处理并得出最终想要的代码后输出 结果。")])]),e._v(" "),t("h3",{attrs:{id:"_3-plugin-拓展插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-plugin-拓展插件"}},[e._v("#")]),e._v(" 3. plugin 拓展插件")]),e._v(" "),t("blockquote",[t("p",[e._v("在 Webpack 构建流程中的特定时机注入扩展逻辑，来改变构建结\n果或做我们想要的事情。")])]),e._v(" "),t("h3",{attrs:{id:"_4-loader-模块转换器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-loader-模块转换器"}},[e._v("#")]),e._v(" 4. loader 模块转换器")]),e._v(" "),t("blockquote",[t("p",[e._v("用于将模块的原内容按照需求转换成新内容。")])]),e._v(" "),t("h3",{attrs:{id:"_5-chunk-代码块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-chunk-代码块"}},[e._v("#")]),e._v(" 5. chunk 代码块")]),e._v(" "),t("blockquote",[t("p",[e._v("一个chunk由多个模块组成，用于代码分割和合并")])]),e._v(" "),t("h3",{attrs:{id:"_6-module-模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-module-模块"}},[e._v("#")]),e._v(" 6. module 模块")]),e._v(" "),t("blockquote",[t("p",[e._v("webpack，一切皆模块，一个文件一个模块")])]),e._v(" "),t("h2",{attrs:{id:"运行流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行流程"}},[e._v("#")]),e._v(" 运行流程")]),e._v(" "),t("blockquote",[t("p",[e._v("Webpack 在启动后会从 Entry配置的 Module 开始，递归解析 Entry 依赖的所有 Module,每找到一个 Module ，就会根据配置的 Loader 去找出对应的转换规则，对 Module 进行转换后，再解析出当前 Module 依赖的 Module 这些模块会以 Entry为单位进行分组，Entry及其所有依赖的Module被分到一个组也就是 Chunk 。最后， Webpack 将所有 Chunk 转换成文件输出。在整个流程中， Webpack 会在恰当的时机执行 Plugin定义的逻辑。")])]),e._v(" "),t("h2",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[e._v("#")]),e._v(" 配置")]),e._v(" "),t("h3",{attrs:{id:"entry-配置模块的入口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entry-配置模块的入口"}},[e._v("#")]),e._v(" Entry ：配置模块的入口．")]),e._v(" "),t("blockquote",[t("p",[e._v("可以接受的值 单个入口：str、arr； 多个入口 obj\n也可以接受promise 动态注册入口")])]),e._v(" "),t("h3",{attrs:{id:"output-配置如何输出最终想要的代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#output-配置如何输出最终想要的代码"}},[e._v("#")]),e._v(" Output：配置如何输出最终想要的代码")]),e._v(" "),t("ol",[t("li",[e._v("...")]),e._v(" "),t("li",[e._v("filename 可以选择内置模板[id],可选id,name,hash,chunkhash")]),e._v(" "),t("li",[e._v("path 文件输出的目录路径")]),e._v(" "),t("li",[e._v("publicPath 发布线上的url，添加cdn，默认'/'")]),e._v(" "),t("li",[e._v("crossOriginLoading 默认:anonymous 不带用户cookies,use-credentials 带上用户cookies")]),e._v(" "),t("li",[e._v("library 导出库的变量名.")]),e._v(" "),t("li",[e._v("libraryTarget 配置以何种方式导出库 var(默认)，commonjs，commonjs2，this，window，global，umd，umd2，amd，jsonp")]),e._v(" "),t("li",[e._v("pathinfo 是否包含有用的文件路径信息到生成的代码里 ，为 boolean 类型")]),e._v(" "),t("li",[e._v("chunkFilename 附加 Chunk 的文件名称")])]),e._v(" "),t("h3",{attrs:{id:"module-配置处理模块的规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#module-配置处理模块的规则"}},[e._v("#")]),e._v(" Module ：配置处理模块的规则")]),e._v(" "),t("ol",[t("li",[e._v("noParse 正则匹配名字不解析")]),e._v(" "),t("li",[e._v("rules {test,include,exclude，parse}")])]),e._v(" "),t("h3",{attrs:{id:"plugins-配置扩展插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#plugins-配置扩展插件"}},[e._v("#")]),e._v(" Plugins ：配置扩展插件")]),e._v(" "),t("blockquote",[t("p",[e._v("plugins 配置项接收一个数组，数组里的每一项都是一个要使用\nPlugin 的实例， Plugin 需要的参数通过构造函数传入")])]),e._v(" "),t("h3",{attrs:{id:"devserver-配置-devserver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devserver-配置-devserver"}},[e._v("#")]),e._v(" DevServer：配置 DevServer")]),e._v(" "),t("ol",[t("li",[e._v("inline 是否插入socket，否用iframe打开，默认true")]),e._v(" "),t("li",[e._v("historyApiFallback boolean or {rewrites: [{form,to}]}")]),e._v(" "),t("li",[e._v("contentBase path.join( dirname,'public');")]),e._v(" "),t("li",[e._v("headers 写入请求头")]),e._v(" "),t("li",[e._v("host 0.0.0.0 提供局域网访问")]),e._v(" "),t("li",[e._v("port 端口")]),e._v(" "),t("li",[e._v("allowedHosts ['abc.com','asd.com']，允许dns的白名单")]),e._v(" "),t("li",[e._v("disableHostCheck 不必host的检查，允许外网配置host")]),e._v(" "),t("li",[e._v("https true(随机生成证书) or {证书路径}")]),e._v(" "),t("li",[e._v("clientLogLevel 配置客户端的日志等级,可取如下值: none error warning info 。")]),e._v(" "),t("li",[e._v("compress 是否启用gzip")]),e._v(" "),t("li",[e._v("open 是否自动用默认浏览器打开项目 /")]),e._v(" "),t("li",[e._v("openPage 指定open打开的url")])]),e._v(" "),t("h3",{attrs:{id:"resolve"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resolve"}},[e._v("#")]),e._v(" resolve")]),e._v(" "),t("ol",[t("li",[e._v("alias 别名{key:path/to/file.xx}")]),e._v(" "),t("li",[e._v("mainFields [jsnext:main,browser,main]从模块里设置主要入口")]),e._v(" "),t("li",[e._v("extensions ['.js','ts']自动补全后缀名")]),e._v(" "),t("li",[e._v("modules webpack在什么路径下找依赖模块默认['node_modules']")]),e._v(" "),t("li",[e._v("descriptionFiles  依赖包描述文件，默认['package.json']")]),e._v(" "),t("li",[e._v("enforceExtension 是否必须带后缀名 默认false")]),e._v(" "),t("li",[e._v("enforceModuleExtension 是否必须带后缀名（ 只对 node_modules 下的模块生效） 默认false")]),e._v(" "),t("li",[e._v("symlinks: true , 是否跟随文件的软链接去搜寻模块的路径")])]),e._v(" "),t("h3",{attrs:{id:"target-输入运行在不同环境文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#target-输入运行在不同环境文件"}},[e._v("#")]),e._v(" target 输入运行在不同环境文件")]),e._v(" "),t("blockquote",[t("p",[e._v("target 配置项可以让 Webpack 构建出针对不同运行环境的代码\n可选值 web、node、async-node、webworker、electron-main、electron-renderer")])]),e._v(" "),t("h3",{attrs:{id:"devtool-配置-webpack-如何生成-source-map"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devtool-配置-webpack-如何生成-source-map"}},[e._v("#")]),e._v(" devtool 配置 Webpack 如何生成 Source Map")]),e._v(" "),t("p",[e._v("默认值是 false，可选值")]),e._v(" "),t("h3",{attrs:{id:"watch-watchoptions-是否监听文件修改-可选参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#watch-watchoptions-是否监听文件修改-可选参数"}},[e._v("#")]),e._v(" watch & watchOptions 是否监听文件修改 & 可选参数")]),e._v(" "),t("p",[e._v("watch boolean 默认false")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("{\n    ignored: /node modules/,\n    ／／监听到变化后会等 300ms 再去执行动作，防止文件更新太快导致重新编译频率太高\n    ／／默认为 300ms\n    aggregateTimeout: 300,\n    ／／判断文件是否发生变化是通过不停地询问系统指定文件有没有变化实现的\n    ／／默认每秒询 1000\n    poll: 1000\n}\n")])])]),t("h3",{attrs:{id:"externals-不打包的库-key-库的全局变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#externals-不打包的库-key-库的全局变量"}},[e._v("#")]),e._v(" Externals 不打包的库{key: 库的全局变量}")]),e._v(" "),t("h3",{attrs:{id:"resolveloader-用来告诉-webpack-如何去寻找loader-该配置项常用于加载本地的-loader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resolveloader-用来告诉-webpack-如何去寻找loader-该配置项常用于加载本地的-loader"}},[e._v("#")]),e._v(" Resolveloader 用来告诉 Webpack 如何去寻找Loader,该配置项常用于加载本地的 Loader")]),e._v(" "),t("ol",[t("li",[e._v("modules ['node_modules']")]),e._v(" "),t("li",[e._v("extensions 自动补全后缀名")]),e._v(" "),t("li",[e._v("mainFelds 指明入口文件位置的字段")])]),e._v(" "),t("h3",{attrs:{id:"stats-控制台输出日志控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stats-控制台输出日志控制"}},[e._v("#")]),e._v(" stats // 控制台输出日志控制")]),e._v(" "),t("p",[e._v("assets : true,\ncolors : true,\nerrors: true,\nerrorDetails: true,\nhash : true ,")]),e._v(" "),t("h3",{attrs:{id:"profile-是否捕捉-webpack-构建的性能信息-用于分析是什么原因导致构建性能不佳"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#profile-是否捕捉-webpack-构建的性能信息-用于分析是什么原因导致构建性能不佳"}},[e._v("#")]),e._v(" profile // 是否捕捉 Webpack 构建的性能信息，用于分析是什么原因导致构建性能不佳")]),e._v(" "),t("h3",{attrs:{id:"cache-是否启用缓存来提升构建速度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cache-是否启用缓存来提升构建速度"}},[e._v("#")]),e._v(" cache // 是否启用缓存来提升构建速度")]),e._v(" "),t("h2",{attrs:{id:"总结-通常我们可用如下经验去判断如何配置-webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-通常我们可用如下经验去判断如何配置-webpack"}},[e._v("#")]),e._v(" 总结：通常我们可用如下经验去判断如何配置 Webpack")]),e._v(" "),t("p",[e._v("若想让源文件加入构建流程中被 Webpack 控制，则配置 entry;\n若想自定义输出文件的位置和名称 ，则配置 output;\n若想自定义寻找依赖模块时 策略 ，则配置 resolve;\n若想自定义解析和转换文件的策略， 则配置 module ，通常是配置 module.\nrules 里的 Loader;\n若其他大部分需求可能通过 Plugin 去实现 ，则配置 plugin")])])}),[],!1,null,null,null);a.default=s.exports}}]);